/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import javax.swing.DefaultRowSorter;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
    

/**
 *
 * @author lukas
 */
public class Window extends javax.swing.JFrame {
    int index;// show number row tabel activeOrder
    int index1;// show number row tabel oldOrder
    Dimension dimemsion = Toolkit.getDefaultToolkit().getScreenSize();
    
    /**
     * Creates new form Window
     */
    
    public Window() {
        super("SerwTel Business");
        initComponents();
        showdata();
       showdata1();
        
    }
    //Show data with first table
    private void showdata() {
        Aktualne baza = new Aktualne();
        new Aktualne().execute();

        DefaultTableModel model = (DefaultTableModel) activeOrder.getModel();
        Object[] rowData = new Object[8];
        for (int i = 0; i < Aktualne.tablica.size(); i++) {
            rowData[0] = Aktualne.tablica.get(i).getname();
            rowData[1] = Aktualne.tablica.get(i).gettelnum();
            rowData[2] = Aktualne.tablica.get(i).getename();
            rowData[3] = Aktualne.tablica.get(i).getid_order();
            rowData[4] = Aktualne.tablica.get(i).getstatus();
            rowData[5] = Aktualne.tablica.get(i).getmodel();
            rowData[6] = Aktualne.tablica.get(i).getdate();
            rowData[7] = Aktualne.tablica.get(i).gettime();      
            model.addRow(rowData);
        }
    }
    public void refreashTable(){
        DefaultTableModel model = (DefaultTableModel) activeOrder.getModel();
        model.setRowCount(0);
        showdata();
        
    }
    
    //Show data with second table
    private void showdata1() {
        NieAktualne baza = new NieAktualne();
        new NieAktualne().execute();

        DefaultTableModel model1 = (DefaultTableModel) oldOrder.getModel();
        Object[] rowData = new Object[8];
        for (int i = 0; i < NieAktualne.tablica.size(); i++) {
            rowData[0] = NieAktualne.tablica.get(i).getname();
            rowData[1] = NieAktualne.tablica.get(i).gettelnum();
            rowData[2] = NieAktualne.tablica.get(i).getename();
            rowData[3] = NieAktualne.tablica.get(i).getid_order();
            rowData[4] = NieAktualne.tablica.get(i).getstatus();
            rowData[5] = NieAktualne.tablica.get(i).getmodel();
            rowData[6] = NieAktualne.tablica.get(i).getdate();
            rowData[7] = NieAktualne.tablica.get(i).gettime();      
            model1.addRow(rowData);
        }
        unlockDescription.setEnabled(false);
        }
    
    public void refreashTable1(){
        DefaultTableModel model1 = (DefaultTableModel) oldOrder.getModel();
        model1.setRowCount(0);
        showdata1();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {


        jTabbedPane4 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        activeOrder = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        oldOrder = new javax.swing.JTable();
        oznaczJakoOdebrane = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        login = new javax.swing.JTextField();
        jLabelLogin = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        unlockDescription = new javax.swing.JMenuItem();
        dataCust = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        setLocation(new java.awt.Point(0, 0));

        activeOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Klient", "Numer telefonu", "Serwisant", "Numer zlecenia", "Aktualny status", "Model", "Data przyjÄ™cia", "Godzina"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });



        activeOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                activeOrderMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(activeOrder);
        if (activeOrder.getColumnModel().getColumnCount() > 0) {
            activeOrder.getColumnModel().getColumn(0).setResizable(false);
            activeOrder.getColumnModel().getColumn(0).setPreferredWidth(20);
            activeOrder.getColumnModel().getColumn(1).setResizable(false);
            activeOrder.getColumnModel().getColumn(1).setPreferredWidth(20);
            activeOrder.getColumnModel().getColumn(2).setResizable(false);
            activeOrder.getColumnModel().getColumn(2).setPreferredWidth(20);
            activeOrder.getColumnModel().getColumn(3).setResizable(false);
            activeOrder.getColumnModel().getColumn(3).setPreferredWidth(20);
            activeOrder.getColumnModel().getColumn(4).setResizable(false);
            activeOrder.getColumnModel().getColumn(5).setResizable(false);
            activeOrder.getColumnModel().getColumn(6).setResizable(false);
            activeOrder.getColumnModel().getColumn(6).setPreferredWidth(5);
            activeOrder.getColumnModel().getColumn(7).setResizable(false);
        }

        jTabbedPane4.addTab("Zlecenia Aktualne", jScrollPane2);

        oldOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Klient", "Numer tel", "Serwisant", "Numer zlecenia", "Problem", "Model", "Data odbioru", "Godzina odbioru"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        oldOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oldOrderMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(oldOrder);
        if (oldOrder.getColumnModel().getColumnCount() > 0) {
            oldOrder.getColumnModel().getColumn(0).setResizable(false);
            oldOrder.getColumnModel().getColumn(0).setPreferredWidth(20);
            oldOrder.getColumnModel().getColumn(1).setResizable(false);
            oldOrder.getColumnModel().getColumn(1).setPreferredWidth(20);
            oldOrder.getColumnModel().getColumn(2).setResizable(false);
            oldOrder.getColumnModel().getColumn(2).setPreferredWidth(20);
            oldOrder.getColumnModel().getColumn(3).setResizable(false);
            oldOrder.getColumnModel().getColumn(4).setResizable(false);
            oldOrder.getColumnModel().getColumn(4).setPreferredWidth(5);
            oldOrder.getColumnModel().getColumn(5).setResizable(false);
            oldOrder.getColumnModel().getColumn(6).setResizable(false);
            oldOrder.getColumnModel().getColumn(7).setResizable(false);
        }

        jTabbedPane4.addTab("Zlecenia Nieaktualne", jScrollPane4);

        oznaczJakoOdebrane.setText("Oznacz jako odebrane");
        oznaczJakoOdebrane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oznaczJakoOdebraneMouseClicked(evt);
            }
        });
        oznaczJakoOdebrane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oznaczJakoOdebraneActionPerformed(evt);
            }
        });

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        jButton1.setText("Dodaj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        login.setEditable(false);
        login.setEnabled(false);

        jLabelLogin.setText("Zalogowany jako");

        jMenu1.setText("NarzÄ™dzia");

        unlockDescription.setText("PrzywrÃ³Ä‡ do aktualnych");
        unlockDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlockDescriptionActionPerformed(evt);
            }
        });
        jMenu1.add(unlockDescription);

        dataCust.setText("Dane klientÃ³w");
        dataCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataCustActionPerformed(evt);
            }
        });
        jMenu1.add(dataCust);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Pomoc");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1103, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oznaczJakoOdebrane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelLogin)
                .addGap(18, 18, 18)
                .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(oznaczJakoOdebrane)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
        );

        

        setSize(new java.awt.Dimension(1119, 635));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void helpActiveOrder(int index){
         AddQuery baza = new AddQuery();
                
         new AddQuery().execute();
       //Problem.setText(Aktualne.tablica.get(index).getopis());
       
    }
    private void activeOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_activeOrderMouseClicked
        index = activeOrder.getSelectedRow();
        oznaczJakoOdebrane.setEnabled(true);
        unlockDescription.setEnabled(false);
    }//GEN-LAST:event_activeOrderMouseClicked

    private void oznaczJakoOdebraneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oznaczJakoOdebraneMouseClicked

    }//GEN-LAST:event_oznaczJakoOdebraneMouseClicked

    private void oldOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oldOrderMouseClicked
        oznaczJakoOdebrane.setEnabled(false);
        unlockDescription.setEnabled(true);
        index1 = oldOrder.getSelectedRow();
    }//GEN-LAST:event_oldOrderMouseClicked

    private void oznaczJakoOdebraneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oznaczJakoOdebraneActionPerformed
        
        AddQuery updat = new AddQuery();
        AddQuery.query = "update orders set ACTIVE = 'F', FINISHDATE=to_char(SYSDATE, 'DD.MM.YYYY'), FINISHTIME=to_char(SYSDATE, 'HH24:MI') where ID_ORDER="+String.valueOf(Aktualne.tablica.get(this.index).getid_order());
        new AddQuery().execute();
        refreashTable();
        refreashTable1();
        JOptionPane.showMessageDialog(null, "Zlecenie pomyÅ›lnie zaarchiwizowano!");
    }//GEN-LAST:event_oznaczJakoOdebraneActionPerformed

    private void unlockDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlockDescriptionActionPerformed
        AddQuery updat = new AddQuery();
        AddQuery.query = "update orders set ACTIVE = 'T', FINISHDATE=null, FINISHTIME=null where ID_ORDER="+String.valueOf(NieAktualne.tablica.get(this.index1).getid_order());
        new AddQuery().execute();
        refreashTable();
        refreashTable1();
        JOptionPane.showMessageDialog(null, "Zmiana pomyÅ›lnie wykonana!");
    }//GEN-LAST:event_unlockDescriptionActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
         DefaultTableModel model = (DefaultTableModel) activeOrder.getModel();
        String query = searchField.getText();
        TableRowSorter <DefaultTableModel> tr = new TableRowSorter <DefaultTableModel>(model);
        activeOrder.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }//GEN-LAST:event_searchFieldKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        AddOrder neworder;
        neworder = new AddOrder();
        neworder.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dataCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataCustActionPerformed
        AddCust addcust = new AddCust();
        addcust.setVisible(true);
    }//GEN-LAST:event_dataCustActionPerformed


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Window().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activeOrder;
    private javax.swing.JMenuItem dataCust;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTextField login;
    private javax.swing.JTable oldOrder;
    private javax.swing.JButton oznaczJakoOdebrane;
    private javax.swing.JTextField searchField;
    private javax.swing.JMenuItem unlockDescription;

    // End of variables declaration//GEN-END:variables
}
